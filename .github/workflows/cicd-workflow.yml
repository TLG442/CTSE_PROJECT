name: CICD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'eu-north-1'
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'
          
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: ctse_project
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT    


      - name: Update task definition with MongoDB URI
        run: |
          # Get the MongoDB URI from secrets and decode it if necessary
          DECODED_URI=$(echo -n '${{ secrets.MONGO_URI }}' | python3 -c "import sys, urllib.parse; print(urllib.parse.unquote(sys.stdin.read()))")
          
          # Use jq to properly update the JSON file
          jq --arg uri "$DECODED_URI" '.containerDefinitions[0].environment |= map(if .name == "MONGO_URI" then .value = $uri else . end)' nodejs-app-task-definition.json > updated-task-def.json
          
          # Replace the original file with the updated one
          mv updated-task-def.json nodejs-app-task-definition.json
          
          # Verify the replacement worked
          echo "Task definition after replacement:"
          jq '.containerDefinitions[0].environment[] | select(.name == "MONGO_URI")' nodejs-app-task-definition.json
          
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: nodejs-app-task-definition.json 
          container-name: nodejs-app
          image: ${{ steps.build-image.outputs.image }}    
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: nodejs-app-service
          cluster: DevCluster1
          wait-for-service-stability: true    
